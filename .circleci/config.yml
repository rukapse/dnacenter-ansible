version: 2.1

setup: << pipeline.parameters.run-setup >>

orbs:
  path-filtering: circleci/path-filtering@0.1.7

parameters:
  run-setup:
    type: boolean
    default: true
  run-any:
    type: boolean
    default: false
  run-all:
    type: boolean
    default: false
  run-site:
    type: boolean
    default: false
  run-devicecredential:
    type: boolean
    default: false
  run-discovery:
    type: boolean
    default: false
  run-inventory:
    type: boolean
    default: false
  run-swim:
    type: boolean
    default: false
  run-pnp:
    type: boolean
    default: false

jobs:

  pre:
    parameters: 
      ansible_cisco_dnac_version:
        type: string
        default: "6.9.0"

    #machine: true
    docker:
      - image: python:3.8.10
    resource_class: rukapse/dnacenter-ansible-minikube

    environment:
      CIRCLE_PROJECT_REPONAME: << pipeline.trigger_parameters.github_app.repo_name >>
      CIRCLE_PROJECT_BRANCHNAME: << pipeline.trigger_parameters.github_app.branch >>

    steps:
      - run:
          name: Debug information for pre
          command: |
            set -x 
            echo "REPO_URL: $REPO_URL"
            echo "CIRCLE_PROJECT_REPONAME: $CIRCLE_PROJECT_REPONAME"
            echo "CIRCLE_PROJECT_BRANCHNAME: $CIRCLE_PROJECT_BRANCHNAME"

  build: 
    parameters: 
      ansible_cisco_dnac_version:
        type: string
        default: "6.9.0"

    #machine: true
    docker:
      - image: python:3.8.10
    resource_class: rukapse/dnacenter-ansible-minikube
    environment:
      REPO_URL: << pipeline.trigger_parameters.github_app.repo_url >>
      CIRCLE_PROJECT_REPONAME: << pipeline.trigger_parameters.github_app.repo_name >>
      CIRCLE_PROJECT_BRANCHNAME: << pipeline.trigger_parameters.github_app.branch >>
    steps:
      - run:
          name: Debug information
          command: |
            echo "REPO_URL: $REPO_URL"
            echo "CIRCLE_PROJECT_REPONAME: $CIRCLE_PROJECT_REPONAME"
            echo "CIRCLE_PROJECT_BRANCHNAME: $CIRCLE_PROJECT_BRANCHNAME"
      - run:
          name: Clone repo to workspace
          command: git clone --depth=1 -b $CIRCLE_PROJECT_BRANCHNAME $REPO_URL .

      - run:
          name: Create Roles File header
          command: |
            mkdir workspace
            echo "---" > workspace/ccc_roles.yml
            echo "- hosts: dnac_servers" >> workspace/ccc_roles.yml
            echo "  gather_facts: no" >> workspace/ccc_roles.yml
            echo "  connection: local" >> workspace/ccc_roles.yml
            echo "  " >> workspace/ccc_roles.yml
            echo "  tasks:" >> workspace/ccc_roles.yml
            echo "  " >> workspace/ccc_roles.yml
            echo "  vars:" >> workspace/ccc_roles.yml
            echo "    debug: false" >> workspace/ccc_roles.yml
            echo "  " >> workspace/ccc_roles.yml
            echo "  roles:" >> workspace/ccc_roles.yml

            cat workspace/ccc_roles.yml
      - restore_cache:
          keys:
            - pip-cache
      - run:
          name: Activate Virtual Environment, Install ansible and Build collection tarball
          command: |
            # Install ansible, dnacentersdk
            pip install --upgrade pip
            pip install jinja2 PyYAML cryptography paramiko
            pip install pyzipper
            pip install ansible 
            pip install dnacentersdk
            ansible --version
            # Build collection and store resulting tarball in directory $HOME/.cache/v<< parameters.ansible_cisco_dnac_version >>/collection-tarballs
            ansible-galaxy collection build --force --output-path workspace/
            ls -alh workspace
      - persist_to_workspace:
          root: 'workspace'
          paths:
            - '*.tar.gz'
            - ccc_roles.yml

      - save_cache: # should be changed to run only on requirements.txt change
          key: pip-cache
          paths:
            - ~/.cache/pip

  addrole:
    #machine: true
    docker:
      - image: python:3.8.10
    resource_class: rukapse/dnacenter-ansible-minikube

    steps:
      - attach_workspace:
          at: workspace
      - when:
          condition: 
            or: [ << pipeline.parameters.run-site >>, << pipeline.parameters.run-all >> ]
          steps:
            - run: 
                command: |
                  echo "    - ccc_site_management" >> workspace/ccc_roles.yml

      - when:
          condition:
            or: [ << pipeline.parameters.run-devicecredential >>, << pipeline.parameters.run-all >> ]
          steps:
            - run: 
                command: |
                  echo "    - ccc_device_credential_management" >> workspace/ccc_roles.yml

      - when:
          condition:
            or: [ << pipeline.parameters.run-discovery >>, << pipeline.parameters.run-all >> ]
          steps:
            - run: 
                command: |
                  echo "    - ccc_discovery_management" >> workspace/ccc_roles.yml

      - when:
          condition:
            or: [ << pipeline.parameters.run-inventory >>, << pipeline.parameters.run-all >> ]
          steps:
            - run: 
                command: |
                  echo "    - ccc_inventory_management" >> workspace/ccc_roles.yml

      - when:
          condition:
            or: [ << pipeline.parameters.run-swim >>, << pipeline.parameters.run-all >> ]
          steps:
            - run: 
                command: |
                  echo "    - ccc_swim_management" >> workspace/ccc_roles.yml


      - when:
          condition:
            or: [ << pipeline.parameters.run-pnp >>, << pipeline.parameters.run-all >> ]
          steps:
            - run: 
                command: |
                  echo "    - ccc_pnp_management" >> workspace/ccc_roles.yml


      - run:
          name: Move artifacts to workspace root
          command: |
            ls -alh workspace
            cat workspace/ccc_roles.yml

      - save_cache:
          key: collection-<< pipeline.git.revision >>
          paths:
            - 'workspace'

  sanity-tests:
    parameters: 
      ansible_cisco_dnac_version:
        type: string
        default: "6.9.0"

    #machine: true
    docker:
      - image: python:3.8.10
    resource_class: rukapse/dnacenter-ansible-minikube 

    environment:
      REPO_URL: << pipeline.trigger_parameters.github_app.repo_url >>
      CIRCLE_PROJECT_REPONAME: << pipeline.trigger_parameters.github_app.repo_name >>
      CIRCLE_PROJECT_BRANCHNAME: << pipeline.trigger_parameters.github_app.branch >>

    steps:
      - run:
          name: Debug information
          command: |
            echo "REPO_URL: $REPO_URL"
            echo "CIRCLE_PROJECT_REPONAME: $CIRCLE_PROJECT_REPONAME"
            echo "CIRCLE_PROJECT_BRANCHNAME: $CIRCLE_PROJECT_BRANCHNAME"

      - run:
          name: Clone repo to workspace
          command: git clone --depth=1 -b $CIRCLE_PROJECT_BRANCHNAME $REPO_URL .
          
      - restore_cache:
          keys:
            - collection-<< pipeline.git.revision >>
            - pip-cache
      - run:
          name: Activate Virtual Environment, Install ansible and Build collection tarball
          command: |

            # Install ansible, dnacentersdk
            pip install --upgrade pip
            pip install jinja2 PyYAML cryptography paramiko 
            pip install pyzipper
            pip install ansible 
            pip install dnacentersdk
            ansible --version
            ls -alhW
      - run:
          name: Install the collection tarball
          command: |
            python --version
            ansible --version  
            ansible-galaxy collection install --force workspace/*.tar.gz
      - run:
          name: Copy static files
          command: |
            mkdir -p group_vars
            cp workspace/ccc_roles.yml ccc_roles.yml
            echo ${GROUP_VARS} | base64 -d > group_vars/dnac_servers.yml
            echo ${DNAC_HOSTS} | base64 -d > hosts
      - run:
          name: Run sanity tests
          command: |
            export ANSIBLE_PERSISTENT_CONNECT_TIMEOUT=1000
            export ANSIBLE_PERSISTENT_COMMAND_TIMEOUT=1000
            export ANSIBLE_ROLES_PATH=$PWD/tests/integration

            ansible-playbook -i hosts ccc_roles.yml

          no_output_timeout: 120m

  post_pnp_testing:
    #machine: true
    docker:
      - image: python:3.8.10
    resource_class: rukapse/dnacenter-ansible-minikube

    steps:
      - when:
          condition: << pipeline.parameters.run-pnp >>
          steps:
            - run: 
                command: |
                  python ${HOME}/static/pnp_script.py

workflows:  
  
  build-test:
    when: << pipeline.parameters.run-setup >>
    jobs:
      - pre

      - build:
          matrix:
            parameters:
              ansible_cisco_dnac_version:
                - "6.9.0"
          requires:
            - pre

      - path-filtering/filter:
          requires:
            - build
          base-revision: main
          config-path: .circleci/config.yml
          mapping: |
            .* run-setup false

            plugins/.* run-any true
            tests/integration/.* run-any true

            plugins/module_utils/.* run-all true

            plugins/modules/site_workflow_manager.py run-site true
            plugins/modules/device_credential_workflow_manager.py run-devicecredential true
            plugins/modules/discovery_workflow_manager.py run-discovery true
            plugins/modules/inventory_workflow_manager.py run-inventory true
            plugins/modules/swim_workflow_manager.py run-swim true
            plugins/modules/pnp_workflow_manager.py run-pnp true
            
            tests/integration/ccc_site_management/.* run-site true    
            tests/integration/ccc_device_credential_management/.* run-devicecredential true
            tests/integration/ccc_discovery_management/.* run-discovery true
            tests/integration/ccc_inventory_management/.* run-inventory true
            tests/integration/ccc_swim_management/.* run-swim true
            tests/integration/ccc_pnp_management/.* run-pnp true
      - addrole:
          requires:
            - path-filtering/filter
         
      - sanity-tests:
          requires: 
            - addrole
          context:
            - dnac-servers
          matrix:
            parameters:
              ansible_cisco_dnac_version:
                - "6.9.0"
      # - post_pnp_testing:
      #     requires:
      #       - sanity-tests
 